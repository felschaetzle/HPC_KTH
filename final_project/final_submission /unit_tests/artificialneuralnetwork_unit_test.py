import numpy as np
import artificialneuralnetwork
import artificialneuralnetwork_vectorized

"""
Unit tests of the changed functions
"""

def test_gradient():   
    """
    Tests the gradient generated by the vectorized gradient function
    """
    np.random.seed(917)
    train = np.genfromtxt('train.csv', delimiter=',')
    train_label = train[:,0].reshape(len(train),1)
    train = train[:,1:] / 255.
    X = train
    y = train_label
    m = np.shape(X)[0]
    input_layer_size = np.shape(X)[1]
    hidden_layer_size = 8
    num_labels = 3
    lmbda = 1.0
    a1_train = np.hstack((np.ones((m,1)), X)) 
    Theta1 = np.random.rand(hidden_layer_size, input_layer_size+1) * 0.4 - 0.2
    Theta2 = np.random.rand(num_labels, hidden_layer_size+1) * 0.4 - 0.2
    theta0 = np.concatenate((Theta1.flatten(), Theta2.flatten()))
    
    assert artificialneuralnetwork_vectorized.gradient(
        theta0, input_layer_size, hidden_layer_size, num_labels, X, y, lmbda, a1_train).all() == artificialneuralnetwork.gradient(
            theta0, input_layer_size, hidden_layer_size,num_labels, X, y, lmbda).all()
                                                                 
            




